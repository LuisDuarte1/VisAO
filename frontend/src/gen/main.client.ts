// @generated by protobuf-ts 2.9.3
// @generated from protobuf file "main.proto" (package "visao", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { VisAO } from "./main";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Image } from "./main";
import type { Empty } from "./google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Interface exported by the server.
 *
 * @generated from protobuf service visao.VisAO
 */
export interface IVisAOClient {
    /**
     * @generated from protobuf rpc: GetImages(google.protobuf.Empty) returns (visao.Image);
     */
    getImages(input: Empty, options?: RpcOptions): UnaryCall<Empty, Image>;
}
/**
 * Interface exported by the server.
 *
 * @generated from protobuf service visao.VisAO
 */
export class VisAOClient implements IVisAOClient, ServiceInfo {
    typeName = VisAO.typeName;
    methods = VisAO.methods;
    options = VisAO.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetImages(google.protobuf.Empty) returns (visao.Image);
     */
    getImages(input: Empty, options?: RpcOptions): UnaryCall<Empty, Image> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, Image>("unary", this._transport, method, opt, input);
    }
}
